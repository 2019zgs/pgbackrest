#!/usr/bin/perl
####################################################################################################################################
# test.pl - Unit Tests for Simple Postgres Backup and Restore
####################################################################################################################################

####################################################################################################################################
# Perl includes
####################################################################################################################################
use strict;
use warnings;
use english;

use File::Basename;
use Getopt::Long;
use Carp;

use lib dirname($0) . "/lib";
use BackRestTest::FileTest;

####################################################################################################################################
# Command line parameters
####################################################################################################################################
my $strLogLevel = "OFF";   # Log level for tests

GetOptions ("log-level=s" => \$strLogLevel)
    or die("Error in command line arguments\n");

####################################################################################################################################
# Setup
####################################################################################################################################
# Set a neutral umask so tests work as expected
umask(0);

# Set console log level to trace for testing
log_level_set(undef, uc($strLogLevel));

####################################################################################################################################
# Runs tests
####################################################################################################################################
BackRestFileTest();

print "\nTEST COMPLETED SUCCESSFULLY (DESPITE ANY ERROR MESSAGES YOU SAW)\n";
